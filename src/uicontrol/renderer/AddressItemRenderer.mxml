<?xml version="1.0"?>
<!--
  Created by wangjian2254 on 14-8-8.
-->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:uicontrol="uicontrol.*"
                autoDrawBackground="false"
        >
    <fx:Metadata>
        [Event(name="listItemClick",type="events.ListClickEvent")]
        [Event(name="listItemZhanKai",type="events.ListClickEvent")]
    </fx:Metadata>
    <fx:Script><![CDATA[
        import events.ListClickEvent;

        import mx.controls.Alert;


        import spark.components.Group;

        import util.ColorUtil;

        private var rLum:Number = 0.2225;
        private var gLum:Number = 0.7169;
        private var bLum:Number = 0.0606;

        [Bindable]
        private var bwMatrix:Array = [rLum, gLum, bLum, 0, 0,
            rLum, gLum, bLum, 0, 0,
            rLum, gLum, bLum, 0, 0,
            0, 0, 0, 1, 0];

        [Bindable]
        [Embed("/assets/img/arrow_closed.png")]
        public static var closed:Class;
        [Bindable]
        [Embed("/assets/img/arrow_opened.png")]
        public static var opened:Class;

        [Bindable]
        [Embed("/assets/img/arrow_closed.gif")]
        public static var righticon:Class;
//        [Bindable]
//        [Embed("/assets/img/arrow_opened.gif")]
//        public static var opened:Class;

        private var _data:Object;
        override public function get data():Object {
            return _data;
        }


        override public function set data(value:Object):void {
            _data = value;
            super.data = value;
            if(value==null){
                return;
            }

            if(!data.hasOwnProperty('unread')||data.unread<1){
                num.visible=false;
            }else{
                num.visible = true;
                numLabel.text = data.unread;
            }
            if(!data.hasOwnProperty('hideicon')){
                childicon.source = null;
                head.source = data.icon;
                rightContainer.visible = false;
                rightContainer.width = 0;

            }else if(data['childrenstatus']){
                head.source=null;
                head.width = 0;
                head.visible = false;
                rightContainer.visible = true;
                rightContainer.width = 50;
                 childicon.source = closed;
            }else{
                head.source=null;
                head.width = 0;
                head.visible = false;
                rightContainer.visible = true;
                rightContainer.width = 50;
                 childicon.source = opened;
            }

            change_status();
            nameLabel.text = data.name;
            if(!data.hasOwnProperty('level')){
                data.level=0;
            }
            horizontalLayout.paddingLeft = 5+data.level*15;
            solidColor.color = getColor(data);
//            if(data.id>=0){
//                nameLabel.addEventListener(MouseEvent.CLICK, select_handler);
//                nameLabel.buttonMode = true;
//            }else{
//                nameLabel.removeEventListener(MouseEvent.CLICK, select_handler);
//                nameLabel.buttonMode = false;
//            }
        }

        private function change_status():void{
            if(data.hasOwnProperty('online')){
                if(data.online){
                    head.filters = [];
                }else{
                    head.filters = [cmf];
                }
            }else{
                head.filters = [];
            }
        }

        private function select_handler(e:MouseEvent):void{
            if((data && data.id>=0)||data.hasOwnProperty("channel")){
                var listclickevent:ListClickEvent=new ListClickEvent("listItemClick",data);
                dispatchEvent(listclickevent);
            }

        }

        private function zhankai(e:MouseEvent):void{
            if(!rightContainer.visible){
                select_handler(null);
                return;
            }
            var listclickevent:ListClickEvent=new ListClickEvent("listItemZhanKai",data);
            dispatchEvent(listclickevent);
            if(childicon.source == closed){
                childicon.source = opened;
            }else{
                childicon.source = closed;
            }
        }

        protected function getColor(data:Object):uint
        {
            if(data){
                return ColorUtil.generateTransitionalColor(0xffffff,0xB3B3B3,5)[data.level%5];
            }
            return 0xffffff;
        }

        protected function m_over():void{
            solidColor.color = 0x7ae7bf;
        }

        protected function m_out():void{
            solidColor.color = getColor(data);
        }
        ]]></fx:Script>
    <fx:Declarations>
        <s:ColorMatrixFilter id="cmf" matrix="{bwMatrix}" />
    </fx:Declarations>

    <s:BorderContainer width="100%" height="50"  borderVisible="false" mouseOut="m_out()" mouseOver="m_over()" >


        <s:Rect id="backgroundRect" left="0" right="0" top="0" bottom="0">
            <s:fill>
                <s:SolidColor color="0xdbdbdb" />
            </s:fill>
        </s:Rect>
        <s:Rect left="1" right="1" top="0" bottom="1">
            <s:fill>
                <s:SolidColor id="solidColor"  />
            </s:fill>
        </s:Rect>
        <s:HGroup id="horizontalLayout"  click="zhankai(event)" verticalAlign="middle"   width="100%" height="100%" buttonMode="true"  >


            <s:Image id="childicon" width="10" height="10"  buttonMode="true"></s:Image>
            <s:Image id="head" width="45" height="45"></s:Image>
            <s:Label id="nameLabel" ></s:Label>
            <s:BorderContainer id="num" minWidth="15" height="15" cornerRadius="7" borderVisible="false" backgroundColor="#ff0000">
                <s:layout>
                    <s:HorizontalLayout verticalAlign="middle" horizontalAlign="center"></s:HorizontalLayout>
                </s:layout>
                <s:Label id="numLabel" text="10" fontSize="12" color="#ffffff" ></s:Label>
            </s:BorderContainer>

        </s:HGroup>
        <uicontrol:RightBtn id="rightContainer" buttonMode="true" right="0" click="select_handler(event)" width="50" top="0" bottom="1" >

        </uicontrol:RightBtn>

    </s:BorderContainer>

</s:ItemRenderer>
