<?xml version="1.0"?>
<!--
  Created by wangjian2254 on 14-7-30.
-->
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:uicontrol="uicontrol.*"
                   width="{personName.width+32}" height="18" borderVisible="false" borderColor="#000000" cornerRadius="7"
                   creationComplete="init()"
        >
    <!--<fx:Metadata>-->
        <!--[Event(name="click",type="flash.events.MouseEvent")]-->
    <!--</fx:Metadata>-->
    <fx:Script><![CDATA[
        import control.window.PersonPanel;

        import httpcontrol.HttpServiceUtil;

        import mx.core.FlexGlobals;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        import spark.skins.spark.BorderContainerSkin;

        import util.ToolUtil;

        private var _person:Object = null;
        private var _department:Object = null;

        [Bindable]
        public var showBtn:Boolean = false;

        private function init():void {
            try {
                personName.text = _person.name;

            } catch (e:Error) {

            }

        }


        public function get person():Object {
            return _person;
        }

        public function set person(value:Object):void {
            _person = value;
            init();
        }

        private function delPerson():void {
            var obj:Object = new Object();

            obj['id'] = department.id;
            obj['pid'] = person.id;
            HttpServiceUtil.getCHTTPServiceAndResult("/riliusers/delPersonDepartment", addChildDepartmentResult, "POST").send(obj);
        }

        private function addChildDepartmentResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                ToolUtil.departMentListRefresh();
            }

        }

        public function showDetail(e:MouseEvent):void {
            if (e.target is BorderContainerSkin) {
                var p:PersonPanel = PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject, PersonPanel, true) as PersonPanel;
                p.personData = person;
//                p.departmentData = department;
            }

        }

        public function get department():Object {
            return _department;
        }

        public function set department(value:Object):void {
            _department = value;
        }
        ]]></fx:Script>
    <s:layout>
        <s:HorizontalLayout gap="5" verticalAlign="middle"  horizontalAlign="left" paddingRight="10" paddingLeft="10">

        </s:HorizontalLayout>
    </s:layout>
    <s:Label id="personName" buttonMode="true"  ></s:Label>
    <uicontrol:BtnDel id="btnDel" visible="{showBtn}" clickFun="delPerson"></uicontrol:BtnDel>
</s:BorderContainer>
