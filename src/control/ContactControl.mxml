<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" 
						  xmlns:uicontrol="uicontrol.*"
						  width="700" height="500" borderVisible="false" backgroundAlpha="0">
	
	<fx:Script>
		<![CDATA[
			import events.CloseEvent;
			import events.PageChangeEvent;
			
			import httpcontrol.CHTTPService;
			import httpcontrol.HttpServiceUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import util.ToolUtil;
			
			[Bindable]
			private var list:ArrayCollection=new ArrayCollection();
			
			override public   function  init(e:FlexEvent):void{

				
				

			}
			override public function closeContainer(e:CloseEvent):void{
				dispatchEvent(e);
				
			}
			
			private function getDataResult(o:Object,e:ResultEvent):void{
				if(o&&o.success){
					list = new ArrayCollection(o.result as Array);
				}
				
			}
			public function initpassword(e:Event):void{
				var data:Object=getData();
				if(data==null){
					return;
				}
				HttpServiceUtil.getCHTTPServiceAndResult("/ft/initUser",initUserResult,"POST").send(data);
			}
			
			private function initUserResult(result:Object,e:ResultEvent):void{
				if(result.success){
					Alert.show(result.message,"提示");
				}
			}
			
			
			public function getData():Object{
				var o:Object={};
				
				
				return o;
			}
			
			private function delContactAsk():void{
				
				Alert.show("确认移除选中的联系人?", "提示", Alert.YES | Alert.NO, null, delContact);
				
			}
			//删除日程
			private function delContact(e:mx.events.CloseEvent):void
			{
				if (e.detail == Alert.YES){
					var data:Object=new Object();
					var username:Array = new Array();
					for each(var item:Object in ToolUtil.contactsList){
						if(item.selected){
							username.push(item.username);
						}
					}
					data["usernames"] = username;
					data["do"] = "out";
					HttpServiceUtil.getCHTTPServiceAndResult("/ca/joinContacts",ToolUtil.contactsRefresh,"POST").send(data);
					
					
				}
			}
			private function addContact():void{
				var data:Object=new Object();
				var username:Array = new Array();
				for each(var item:Object in list){
					if(item.selected){
						username.push(item.username);
					}
				}
				if(username.length==0){
					Alert.show("请选择用户","警告");
					return;
				}
				data["usernames"] = username;
				data["do"] = "join";
				HttpServiceUtil.getCHTTPServiceAndResult("/ca/joinContacts",ToolUtil.contactsRefresh,"POST").send(data);
				
			}
			private function search():void{
				var data:Object=new Object();
				data["key"] = key.text;
				HttpServiceUtil.getCHTTPServiceAndResult("/ca/findUser",searchResult,"POST").send(data);
				
			}
			private function searchResult(result:Object,e:ResultEvent):void{
				if(result.result){
					list.removeAll();
					list.addAll(new ArrayCollection(result.result as Array));
				}
				
			}
			
			private function loadDataFault(e:FaultEvent):void{
				Alert.show('操作失败',"提示");
			}
			
			
			//新增，保存，删除的处理函数
			private function clickHander(e:ItemClickEvent):void{
				if(e.label=="新增"){
					add();
				}
				if(e.label=="修改"){
					if(peopgrid.selectedItem==null){
						Alert.show("提示","请选择一条记录。");
					}else{
						show(peopgrid.selectedItem);
					}
				}
				if(e.label=="删除"){
					del();
				}
				if(e.label=='同步数据'){
					//					InfoUtil.userRefresh(refreshScx);
					init(null);
				}
				//				if(e.label=='测试打开部门管理'){
				//					var obj:Object=new Object();
				//					obj['test']="测试";
				//					var evt:ChangeMenuEvent=new ChangeMenuEvent(ChangeMenuEvent.ChangeMenu_EventStr,"dept",obj,true)
				//					dispatchEvent(evt);
				//				}
				
			}
			
			public function add():void{
			}
			public function del():void{
				var userArr:ArrayCollection=new ArrayCollection();
				var obj:Object;
				var item:Object;
				for(var i:int=list.length-1;i>=0;i--){
					item=list.getItemAt(i);
					if(!item.selected){
						continue;
					}
					obj=new Object();
					if(item.hasOwnProperty("id")){
						obj.id=item.id;
						userArr.addItem(obj);
					}
					//					obj.name=item.name;
					
				}
				if(userArr.length>0){
//					ToolUtil.deptRefresh(refresh);
//					ToolUtil.areaRefresh(refresh);
//					ToolUtil.userRefresh(refresh);
					//					HttpServiceUtil.getCHTTPServiceAndResultAndFault("/htcsgl/_100_BaseInfosAction_deletedept.action",loadDataResult,loadDataFault,"POST").send(userArr);
				}
			}
			
			public function show(obj:Object):void{
			}
			
			
			
			public function refresh(result:Object,e:ResultEvent):void{
				if(result.success){
					add();
					init(null);
					//					InfoUtil.userRefresh(refreshScx);
				}
			}
			
			private function isUsered(item:Object, column:AdvancedDataGridColumn):String{
				var str:String="";
					if(item.isaction){
						str="启用";
					}else{
						str="停止使用";
					}
				return str;
			}
			
			
			private function userType(item:Object, column:AdvancedDataGridColumn):String{
				var str:String="";
					if(item.ismanager){
						str="编辑者";
					}
					
				return str;
			}
				[Bindable]
				private var buttonArr:ArrayCollection=new ArrayCollection([{'label':'新增','ico':addimg},{'label':'修改','ico':saveimg},{'label':'同步数据','ico':refreshimg}]);
				
			private function pagechange(e:PageChangeEvent):void
				
			{
				
				//				datalist.dataProvider = e.Filter(datas)
				
			}
				
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="uTypeRadio" >
			
		</s:RadioButtonGroup>
	</fx:Declarations>
	<s:BorderContainer top="5" bottom="5" left="5" right="5"  borderVisible="false" color="0x333333" skinClass="skins.contentBoxSkin">
		<s:layout>
			<s:HorizontalLayout paddingTop="3">
				
			</s:HorizontalLayout>
		</s:layout>
		<s:BorderContainer width="30%" height="100%" id="panel" backgroundAlpha="0"   borderVisible="false">
			<s:layout>
				<s:VerticalLayout verticalAlign="top">
					
				</s:VerticalLayout>
			</s:layout>
			<s:BorderContainer  width="100%" height="25"  backgroundAlpha="0"  borderVisible="false">	
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle" paddingLeft="25" gap="5">
						
					</s:HorizontalLayout>
				</s:layout>
				<s:Label text="查找：" />
				<s:TextInput width="100" id="key" />
				<s:Button chromeColor="red" color="#ffffff" label="查找" height="25" click="search()" />
				<s:Button chromeColor="#cccccc" color="#000000" label="加入通信录" height="25" click="addContact()" />
			</s:BorderContainer>
			<uicontrol:MarkAdvancedDataGrid dataProvider="{list}"  isNewAdd="false" enabled="true" editable="true" width="100%" height="100%">
				<uicontrol:columns>
					<mx:AdvancedDataGridColumn headerText="选择" dataField="selected" editable="true"  sortable="false" width="60"  editorDataField="selected" rendererIsEditor="true" >
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox horizontalAlign="center">
									<fx:Script>
										<![CDATA[
											public function get selected():Boolean{
												return cb.selected;
											}
											public function set selected(value:Boolean):void{
												cb.selected=value;
											}
										]]>
									</fx:Script>
									
									<mx:CheckBox id="cb" selected="{data.selected}" >
										
									</mx:CheckBox>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="用户名" editable="false"  dataField="username">
						
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="姓名" editable="false"  dataField="nickname">
						
					</mx:AdvancedDataGridColumn>
					
				</uicontrol:columns>
				
			</uicontrol:MarkAdvancedDataGrid>
		</s:BorderContainer>
		<s:BorderContainer id="rightContainner" width="70%" height="100%" backgroundAlpha="0"  borderVisible="false">
			<s:layout>
				<s:VerticalLayout gap="5">
					
				</s:VerticalLayout>
				
			</s:layout>
			<s:Button chromeColor="red" color="#ffffff" label="移除通信录" height="25" click="delContactAsk()" />
			<uicontrol:MarkAdvancedDataGrid id="peopgrid" dataProvider="{ToolUtil.contactsList}"  isNewAdd="false" enabled="true" editable="true" width="100%" height="100%">
				<uicontrol:columns>
					<mx:AdvancedDataGridColumn headerText="选择" dataField="selected" editable="true"  sortable="false" width="60"  editorDataField="selected" rendererIsEditor="true" >
						<mx:itemRenderer>
							<fx:Component>
								<mx:HBox horizontalAlign="center">
									<fx:Script>
										<![CDATA[
											public function get selected():Boolean{
												return cb.selected;
											}
											public function set selected(value:Boolean):void{
												cb.selected=value;
											}
										]]>
									</fx:Script>
									
									<mx:CheckBox id="cb" selected="{data.selected}" >
										
									</mx:CheckBox>
								</mx:HBox>
							</fx:Component>
						</mx:itemRenderer>
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="用户名" editable="false" dataField="username">
						
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="姓名" editable="false"  dataField="nickname">
						
					</mx:AdvancedDataGridColumn>
					
					<mx:AdvancedDataGridColumn headerText="RTX账号" editable="false"  dataField="rtx"  >
						
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="email" editable="false"  dataField="email" >
						
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="手机号" editable="false"  dataField="sms" >
						
					</mx:AdvancedDataGridColumn>
				</uicontrol:columns>
				
			</uicontrol:MarkAdvancedDataGrid>

		</s:BorderContainer>
	</s:BorderContainer>
</control:CBorderContainer>
