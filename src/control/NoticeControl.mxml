<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" 
						  xmlns:uicontrol="uicontrol.*"
						  width="700" height="500" borderVisible="false" backgroundAlpha="0">
	
	<fx:Script>
		<![CDATA[
        import control.window.AddNotice;
        import events.ChangeUserEvent;
        import events.CloseEvent;
			import events.PageChangeEvent;
        import events.PluginEvent;
			import httpcontrol.HttpServiceUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
        import mx.core.FlexGlobals;
        import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
        import mx.managers.PopUpManager;
        import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import util.ToolUtil;
			
			[Bindable]
			private var list:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var buttonArr1:ArrayCollection=new ArrayCollection();
			
			override public   function  init(e:FlexEvent):void{
                changeCurrentUser(null);
                ToolUtil.pluginRefresh();
			}

            override public function changeCurrentUser(e:ChangeUserEvent):void{
                buttonArr1.removeAll();
                if(ToolUtil.sessionUser.auth=="admin"){
                    buttonArr1.addAll(new ArrayCollection([
                        {'label': '添加系统消息', 'ico': addimg, 'mode': 'add'},
                        {'label': '修改系统消息', 'ico': saveimg, 'mode': 'update'},
                        {'label': '删除消息', 'ico': delimg, 'mode': 'del'}
                    ]));
                }else{
                    buttonArr1.addAll(new ArrayCollection([

                    ]));
                }
                getApkList();
            }

			override public function closeContainer(e:CloseEvent):void{
				dispatchEvent(e);
				
			}
			
			private function getDataResult(o:Object,e:ResultEvent):void{
				if(o&&o.success){
					list = new ArrayCollection(o.result as Array);
				}
				
			}
			public function getApkList(e:Error=null):void{
				var data:Object=getData();

				HttpServiceUtil.getCHTTPServiceAndResult("/NoticeList",getApkListResult,"get").send(data);
			}
			
			private function getApkListResult(result:Object,e:ResultEvent):void{

                list.removeAll();
                list.addAll(new ArrayCollection(result.result.list as Array));
                list.refresh();

			}
			
			
			public function getData():Object{
				var o:Object={};

				return o;
			}
			

			
			private function loadDataFault(e:FaultEvent):void{
				Alert.show('操作失败',"提示");
			}
			
			
			//新增，保存，删除的处理函数
			private function clickHander(e:ItemClickEvent):void{
				if(e.item.mode=="add"){
					add();
				}
                if(e.item.mode=="update"){
                    updatePlugin();
                }

                if(e.item.mode=="del"){
                    deleteImage();
                }


			}
			
			public function add():void{
                var p:AddNotice=PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject,AddNotice,true) as AddNotice;
                p.addEventListener(PluginEvent.PluginChange,function(e:Event):void{
                    getApkList();
                });
			}
        public function updatePlugin():void{
            if(!pluginGrid.selectedItem){
                Alert.show("请选择应用。")
                return;
            }
            var data:Object=new Object();
            data["id"] = pluginGrid.selectedItem.id;
            HttpServiceUtil.getCHTTPServiceAndResult("/NoticeDetail",function(result:Object, e:ResultEvent):void{
                var p:AddNotice=PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject,AddNotice,true) as AddNotice;
                p.notice = result.result;
                p.addEventListener(PluginEvent.PluginChange,function(e:Event):void{
                    getApkList();
                });
            },"get").send(data);


        }


        private function deleteImage():void {
            if(!pluginGrid.selectedItem){
                Alert.show("请选择消息。")
                return;
            }
                Alert.show("确认删除消息 "+pluginGrid.selectedItem.title+" ?", "提示", Alert.YES | Alert.NO, null, deleteImg);
        }

        //上传图片到服务器
        private function deleteImg(e:mx.events.CloseEvent):void {
            if (e.detail == Alert.YES) {
                del();
            }
        }
			public function del():void{
                if(!pluginGrid.selectedItem){
                    Alert.show("请选择消息。")
                    return;
                }

                var obj:Object = new Object();
                obj.id = pluginGrid.selectedItem.id;
                HttpServiceUtil.getCHTTPServiceAndResult("/NoticeDelete", function(result:Object,e:ResultEvent):void{
                    getApkList();
                },"get").send(obj);
			}
			
			public function show(obj:Object):void{
			}
			
			
			
			public function refresh(result:Object,e:ResultEvent):void{
				if(result.success){
					add();
					init(null);
					//					InfoUtil.userRefresh(refreshScx);
				}
			}
			
			private function isUsered(item:Object, column:GridColumn):String{
				var str:String="";
					if(item.isaction){
						str="启用";
					}else{
						str="停止使用";
					}
				return str;
			}
			
			
			private function userType(item:Object, column:GridColumn):String{
				var str:String="";
					if(item.ismanager){
						str="编辑者";
					}
					
				return str;
			}
			private function pagechange(e:PageChangeEvent):void
				
			{
				
				getApkList();
				
			}

        private function typefun(item:Object, column:GridColumn):String{
            if(item.type==2){
                return "应用广告";
            }else{
                return "系统消息";
            }
        }



		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="uTypeRadio" >
			
		</s:RadioButtonGroup>
	</fx:Declarations>

		<s:BorderContainer width="100%" height="100%" id="panel" backgroundAlpha="0"   borderVisible="false">
			<s:layout>
				<s:VerticalLayout verticalAlign="top">
					
				</s:VerticalLayout>
			</s:layout>
			<s:BorderContainer  width="100%" height="45"    borderVisible="false" backgroundImage="{CBorderContainer.toolbgimg}">
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle" paddingLeft="25" gap="5">
						
					</s:HorizontalLayout>
				</s:layout>
                <mx:ButtonBar id="ba1" dataProvider="{buttonArr1}" doubleClickEnabled="true"  chromeColor="#faf0cc"  labelField="label" iconField="ico"  height="30"  itemClick="clickHander(event)" >
                </mx:ButtonBar>
			</s:BorderContainer>
            <s:DataGrid id="pluginGrid" width="100%" height="100%" rowHeight="30" dataProvider="{list}">
                <s:columns>
                    <s:ArrayList>
                        <s:GridColumn dataField="title" headerText="标题" minWidth="250">
                        </s:GridColumn>

                        <s:GridColumn dataField="type" headerText="类型" labelFunction="typefun" width="100">
                        </s:GridColumn>
                        <s:GridColumn dataField="lastUpdateTime" headerText="最后修改日期"  width="120">
                        </s:GridColumn>
                        <s:GridColumn dataField="startdate" headerText="开始日期"  width="120">
                        </s:GridColumn>
                        <s:GridColumn dataField="enddate" headerText="截止日期"  width="110">
                        </s:GridColumn>
                        <s:GridColumn dataField="pluginimg" headerText="应用图标" width="65">
                            <s:itemRenderer>
                                <fx:Component>
                                    <s:GridItemRenderer>
                                        <s:HGroup width="100%" height="100%" verticalAlign="middle" gap="5" paddingLeft="5" paddingTop="3" paddingRight="3">
                                            <s:Image source="/download/{data.pluginimg}" height="30" width="30"></s:Image>
                                        </s:HGroup>
                                    </s:GridItemRenderer>
                                </fx:Component>
                            </s:itemRenderer>
                        </s:GridColumn>
                    </s:ArrayList>
                </s:columns>
            </s:DataGrid>
		</s:BorderContainer>
</control:CBorderContainer>
