<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" 
						  xmlns:uicontrol="uicontrol.*"
						  width="700" height="500" borderVisible="false" backgroundAlpha="0">
	
	<fx:Script>
		<![CDATA[
			import events.ChangeMenuEvent;
			import events.ChangeUserEvent;
			import events.CloseEvent;
			import events.PageChangeEvent;
			
			import httpcontrol.CHTTPService;
			import httpcontrol.HttpServiceUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import util.ToolUtil;
			
			
			
			[Bindable]
			private var joinlist:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var observerlist:ArrayCollection=new ArrayCollection();
			
			private var groupData:Object=null;
			
			override public   function  init(e:FlexEvent):void{
				
				add();
				
				
			}
			override public function closeContainer(e:CloseEvent):void{
				dispatchEvent(e);
				
			}
			
			
			
			
			
			public function add():void{
				groupData=null;
				groupTitle.text="";
				colorPicker.selectedColor = Math.random()*0xffffff;
				joinlist.removeAll();
				observerlist.removeAll();
				btnSave.visible=true;
				btnDel.visible=false;
				btnQuit.visible=false;
			}
			
			
			public function show():void{
				if(groupGrid.selectedItem){
					groupData = groupGrid.selectedItem;
					groupTitle.text = groupData.name;
					colorPicker.selectedColor = groupData.color;
					joinlist.removeAll();
					joinlist.addAll( new ArrayCollection(groupData.userlist as Array));
					observerlist.removeAll();
					observerlist.addAll( new ArrayCollection(groupData.observerlist as Array));
					
					if(groupData.pem=="create"){
						btnDel.visible=true;
						btnSave.visible=true;
						btnQuit.visible=false;
					}else{
						btnDel.visible=false;
						btnSave.visible=false;
						btnQuit.visible=true;
						
					}
					
				}else{
					add();
				}
			}
			
			
			
			public function refresh(result:Object,e:ResultEvent):void{
				if(result.success){
					add();
					init(null);
				}
			}
			
			private function group_pem(item:Object, column:AdvancedDataGridColumn):String{
				var str:String="";
				if(item.pem=="create"){
					str="创建";
				}else if(item.pem=="join"){
					str="参与";
				}else if(item.pem=="look"){
					str="共享";
				}
				return str;
			}
			
			
			private function joinuser(b:Boolean):void{
				var obj:Object=null;
				if(b){
					if(allContactGrid.selectedItem){
						for each(obj in joinlist){
							if(obj.username==allContactGrid.selectedItem.username){
								return;
							}
						}
						joinlist.addItem(allContactGrid.selectedItem);
						for each(obj in observerlist){
							if(obj.username==allContactGrid.selectedItem.username){
								observerlist.removeItemAt(observerlist.getItemIndex(obj));
								return ;
							}
						}
					}
				}else{
					joinlist.removeItemAt(joinlist.getItemIndex(joingrid.selectedItem));
				}
			}
			private function joinuser2(b:Boolean):void{
				var obj:Object=null;
				if(b){
					if(allContactGrid2.selectedItem){
						for each(obj in observerlist){
							if(obj.username==allContactGrid2.selectedItem.username){
								return;
							}
						}
						observerlist.addItem(allContactGrid2.selectedItem);
						for each(obj in joinlist){
							if(obj.username==allContactGrid2.selectedItem.username){
								joinlist.removeItemAt(joinlist.getItemIndex(obj));
								return ;
							}
						}
					}
				}else{
					observerlist.removeItemAt(observerlist.getItemIndex(observergrid.selectedItem));
				}
				
			}
			private function openAddress():void{
				var obj:Object=new Object();
				var evt:ChangeMenuEvent=new ChangeMenuEvent(ChangeMenuEvent.ChangeMenu_EventStr,"contact",obj,true)
				FlexGlobals.topLevelApplication.dispatchEvent(evt);
			}
			
			private function askdel():void{
				if(groupData!=null &&groupData.id){
					
					Alert.show("确认删除当前分组? 分组内的日程会被全部删除", "提示", Alert.YES | Alert.NO, null, del);
				}
				
			}
			//删除日程
			private function del(e:mx.events.CloseEvent):void
			{
				if (e.detail == Alert.YES){
					var data:Object = new Object();
					data["id"] = groupData.id;
					HttpServiceUtil.getCHTTPServiceAndResult("/ca/delGroup",delResult,"POST").send(data);
					
					
				}
			}
			private function delResult(result:Object,e:ResultEvent):void{
				if(result.success){
					ToolUtil.groupRefresh();
					add();
					FlexGlobals.topLevelApplication.dispatchEvent(new ChangeUserEvent(ChangeUserEvent.ChangeUser_EventStr,ToolUtil.sessionUser,true));
					
				}
			}
			//删除日程
			private function quit(e:mx.events.CloseEvent):void
			{
				if (e.detail == Alert.YES){
					var data:Object = new Object();
					data["id"] = groupData.id;
					data["do"] = "out";
					HttpServiceUtil.getCHTTPServiceAndResult("/ca/joinGroup",delResult,"POST").send(data);
					
					
				}
			}
			private function askquit():void{
				if(groupData!=null &&groupData.id){
					
					Alert.show("确认退出当前分组? 分组内的日程不会再看到", "提示", Alert.YES | Alert.NO, null, quit);
				}
			}
			private function save():void{
				if(groupTitle.text==""){
					Alert.show("分组名称不能为空","警告");
					return;
				}
				var obj:Object=null;
				var data:Object=new Object();
				if(groupData!=null){
					data["id"]=groupData.id;
				}
				data["name"]=groupTitle.text;
				data["color"]=colorPicker.selectedColor;
				data["joins"]=new Array();
				for each(obj in joinlist){
					data["joins"].push(obj.username);
				}
				data["observers"]=new Array();
				for each(obj in observerlist){
					data["observers"].push(obj.username);
				}
				HttpServiceUtil.getCHTTPServiceAndResult("/ca/updateGroup",saveResult,"POST").send(data);
			}
			private function saveResult(result:Object,e:ResultEvent):void{
				if(result.success){
					ToolUtil.groupRefresh();
					if(groupData==null){
						groupData=new Object();
						groupData.id=result.result;
					}
					
					btnSave.visible=true;
					btnDel.visible=true;
					btnQuit.visible=false;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="uTypeRadio" >
			
		</s:RadioButtonGroup>
	</fx:Declarations>
	<s:BorderContainer top="5" bottom="5" left="5" right="5"  borderVisible="false" color="0x333333" skinClass="skins.contentBoxSkin">
		<s:layout>
			<s:HorizontalLayout paddingTop="3">
				
			</s:HorizontalLayout>
		</s:layout>
		<s:BorderContainer width="30%" height="100%" id="panel" backgroundAlpha="0"   borderVisible="false">
			<s:layout>
				<s:VerticalLayout verticalAlign="top">
					
				</s:VerticalLayout>
			</s:layout>
			<s:BorderContainer  width="100%" height="25"  backgroundAlpha="0"  borderVisible="false">	
				<s:layout>
					<s:HorizontalLayout verticalAlign="middle" paddingLeft="25" gap="5">
						
					</s:HorizontalLayout>
				</s:layout>
				
				<s:Button chromeColor="red" color="#ffffff" label="新建分组" height="25" click="add()" />
			</s:BorderContainer>
			<uicontrol:MarkAdvancedDataGrid id="groupGrid" dataProvider="{ToolUtil.groupList}" itemClick="show()"  isNewAdd="false" enabled="true" editable="true" width="100%" height="100%">
				<uicontrol:columns>
					
					<mx:AdvancedDataGridColumn headerText="分组名称" editable="false"  dataField="name">
						
					</mx:AdvancedDataGridColumn>
					<mx:AdvancedDataGridColumn headerText="权限" editable="false"  dataField="pem" labelFunction="group_pem">
						
					</mx:AdvancedDataGridColumn>
					
				</uicontrol:columns>
				
			</uicontrol:MarkAdvancedDataGrid>
		</s:BorderContainer>
		<s:Form width="70%" height="100%"  >
			<s:FormItem label="分组名称："  >
				<s:TextInput id="groupTitle" width="200"/>
			</s:FormItem>
			<s:FormItem label="颜色标示：" >
				<mx:ColorPicker id="colorPicker" color="#010000" selectedColor="#ffffff" 
								symbolColor="#030002">
					
				</mx:ColorPicker>
			</s:FormItem>
			<s:FormItem label="参与者：" >
				<s:layout>
					<s:HorizontalLayout gap="5"/>
				</s:layout>
				<s:BorderContainer width="40%" height="220" borderVisible="false">
					<s:layout>
						<s:VerticalLayout gap="3">
							
						</s:VerticalLayout>
					</s:layout>
					<s:BorderContainer width="100%" height="30" borderVisible="false" >
						<s:layout>
							<s:HorizontalLayout gap="5" verticalAlign="middle"/>
						</s:layout>
						<s:Label text="常用联系人：" width="80" textAlign="right" height="25" verticalAlign="middle" />
						<s:BorderContainer  width="100%" height="30" borderVisible="false" >
							<s:layout>
								<s:HorizontalLayout gap="5" verticalAlign="middle" horizontalAlign="right" paddingRight="15"/>
							</s:layout>
							
							<uicontrol:BtnSetting clickFun="openAddress" />
							<uicontrol:BtnRefresh clickFun="ToolUtil.contactsRefresh"  />
							
						</s:BorderContainer>
					</s:BorderContainer>
					<mx:DataGrid width="100%" height="100%" id="allContactGrid" dataProvider="{ToolUtil.contactsList}" doubleClickEnabled="true" itemDoubleClick="joinuser(true)">
						<mx:columns>
							<mx:DataGridColumn dataField="username" headerText="用户名">
								
							</mx:DataGridColumn>
							<mx:DataGridColumn dataField="nickname" headerText="姓名">
								
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</s:BorderContainer>
				<s:BorderContainer width="40%" height="220" borderVisible="false">
					<s:layout>
						<s:VerticalLayout gap="3">
							
						</s:VerticalLayout>
					</s:layout>
					<s:Label text="参与者（可创建、修改日程）" height="30" verticalAlign="middle" />
					
					<mx:DataGrid width="100%" height="100%" id="joingrid" dataProvider="{joinlist}" doubleClickEnabled="true" itemDoubleClick="joinuser(false)">
						<mx:columns>
							<mx:DataGridColumn dataField="username" headerText="用户名">
								
							</mx:DataGridColumn>
							<mx:DataGridColumn dataField="nickname" headerText="姓名">
								
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</s:BorderContainer>
			</s:FormItem>
			<s:FormItem label="共享者：" >
				<s:layout>
					<s:HorizontalLayout gap="3">
						
					</s:HorizontalLayout>
				</s:layout>
				<s:BorderContainer width="40%" height="220" borderVisible="false" >
					<s:layout>
						<s:VerticalLayout gap="5" verticalAlign="middle"/>
					</s:layout>
					<s:BorderContainer width="100%" height="30" borderVisible="false" >
						<s:layout>
							<s:HorizontalLayout gap="5" verticalAlign="middle"/>
						</s:layout>
						<s:Label text="常用联系人：" width="80" textAlign="right" height="25" verticalAlign="middle" />
						<s:BorderContainer  width="100%" height="30" borderVisible="false" >
							<s:layout>
								<s:HorizontalLayout gap="5" verticalAlign="middle" horizontalAlign="right" paddingRight="15"/>
							</s:layout>
							
							<uicontrol:BtnSetting clickFun="openAddress" />
							<uicontrol:BtnRefresh clickFun="ToolUtil.contactsRefresh"  />
							
						</s:BorderContainer>
					</s:BorderContainer>
					
					<mx:DataGrid width="100%" height="100%" id="allContactGrid2" dataProvider="{ToolUtil.contactsList}" doubleClickEnabled="true" itemDoubleClick="joinuser2(true)">
						<mx:columns>
							<mx:DataGridColumn dataField="username" headerText="用户名">
								
							</mx:DataGridColumn>
							<mx:DataGridColumn dataField="nickname" headerText="姓名">
								
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</s:BorderContainer>
				<s:BorderContainer width="40%" height="220" borderVisible="false">
					<s:layout>
						<s:VerticalLayout gap="3">
							
						</s:VerticalLayout>
					</s:layout>
					<s:Label text="共享者（只能看见日程）"  height="30" verticalAlign="middle" />
					
					<mx:DataGrid width="100%" height="100%" id="observergrid" dataProvider="{observerlist}" doubleClickEnabled="true" itemDoubleClick="joinuser2(false)">
						<mx:columns>
							<mx:DataGridColumn dataField="username" headerText="用户名">
								
							</mx:DataGridColumn>
							<mx:DataGridColumn dataField="nickname" headerText="姓名">
								
							</mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</s:BorderContainer>
			</s:FormItem>
			<mx:ControlBar>
				<s:Button label="保存" chromeColor="#ff0000" color="#ffffff" height="25" id="btnSave" click="save()" />
				<s:Button label="删除" chromeColor="#cccccc" color="#000000" height="25" id="btnDel" click="askdel()" />
				<s:Button label="退出" chromeColor="#ff0000" color="#ffffff" height="25" id="btnQuit" click="askquit()" />
            </mx:ControlBar>
		</s:Form>
	</s:BorderContainer>
</control:CBorderContainer>
