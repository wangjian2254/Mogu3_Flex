<?xml version="1.0" encoding="utf-8"?>
<window:EfficientTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
                             xmlns:s="library://ns.adobe.com/flex/spark"
                             xmlns:uicontrol="uicontrol.*"
                             width="750" height="550" creationComplete="init()"
                             title="添加应用" xmlns:window="control.window.*">
    <fx:Script>
		<![CDATA[
        import events.PluginEvent;

        import httpcontrol.HttpServiceUtil;

        import json.JParser;

        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.managers.CursorManager;
        import mx.managers.PopUpManager;
        import mx.rpc.events.ResultEvent;

        import util.ToolUtil;

        private var file:FileReference;
        private var file_image:FileReference;
        private var file_apk:FileReference;
        private var byteArray:ByteArray;
        private var bitmapData:BitmapData;
        private var loader:Loader = new Loader();
        private var loader_image:Loader = new Loader();

        [Bindable]
        public var plugin:Object = new Object();


        private function init():void {

            file = new FileReference();
            file.addEventListener(Event.SELECT, fileReferenceSelectHandler);
            file.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadImageResult);

            file_image = new FileReference();
            file_image.addEventListener(Event.SELECT, fileReferenceSelectHandler_image);
            file_image.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadImageResult_image);

            file_apk = new FileReference();
            file_apk.addEventListener(Event.SELECT, fileReferenceSelectHandler_apk);
            file_apk.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadImageResult_apk);

            if (plugin.hasOwnProperty("id")) {
                appname.text = plugin.name;
                desc.text = plugin.desc;
                typeButtonGroup.selectedValue = plugin.type;
                for each(var obj:Object in ToolUtil.userkindlist) {
                    if (obj.id == plugin.kindids[0]) {
                        kinDownList.selectedItem = obj;
                    }
                }
                iconImage.source = plugin.imageid;
                for each(var uri:String in plugin.imagelist) {
                    var img:Image = new Image();
                    img.source = uri;
                    img.doubleClickEnabled = true;
                    img.addEventListener(MouseEvent.DOUBLE_CLICK, deleteImage);
                    imgGroup.addElement(img);
                }
            }
        }


        private function getOrgByFlagResult(result:Object, e:ResultEvent):void {
            this.title = result.result.name + " 新成员注册";
        }

        public function save():void {
            if (appname.text == "" ||  desc.text == "") {
                Alert.show("应用名称、应用包名、应用简介必须填写", "提示");
                return;
            }
            if (!plugin.hasOwnProperty("id")) {
                if (iconImage.source == null) {
                    Alert.show("请选择应用图标", "提示");
                    return;
                }
                if (!apkImage.visible) {
                    Alert.show("请选择需要上传的apk", "提示");
                    return;
                }
            }

            var obj:Object = new Object();

            if (plugin.hasOwnProperty("id")) {
                obj.pluginid = plugin.id;
            }
            obj.name = appname.text;
            obj.desc = desc.text;
            obj.kind = kinDownList.selectedItem.id;
            obj.type = typeButtonGroup.selectedValue;

            HttpServiceUtil.getCHTTPServiceAndResult("/mogu/PluginUpdate", function (result:Object, e:ResultEvent):void {
                plugin.id = result.result.pluginid;
                dispatchEvent(new PluginEvent());
                if (file.data) {

                    proceedWithUpload();
                } else {
                    if (file_apk.data) {
                        proceedWithUpload_apk();
                    }
                }


            }, "POST").send(obj);

        }

        public function refresh(r:Object, e:ResultEvent):void {
            closeWin();
            ToolUtil.sessionUserRefresh(ToolUtil.currentUserFun);
            if (ToolUtil.selectOrg != null && ToolUtil.selectOrg.parent != null) {
                PopUpManager.removePopUp(ToolUtil.selectOrg);
                ToolUtil.selectOrg = new SelectOrgPanel();
            }
        }

        public function foucePass(obj:Object):void {
            obj.setFocus();
        }

        //选择上传的图片
        private function chooseImage():void {
            file.removeEventListener(Event.COMPLETE, completeHandle);
            file.addEventListener(Event.COMPLETE, fileReferenceCompleteHandler);
            var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.png)", "*.jpg;*.jpeg;*.png");
            var allTypes:Array = new Array(imageTypes);
            file.browse(allTypes);
            //                file.browse();
        }

        //监听文件上传状态
        private function onProgress(e:ProgressEvent):void {
//				lbProgress.text=;
            var proc:uint = e.bytesLoaded / e.bytesTotal * 100;
            bar.setProgress(proc, 100);
            bar.label =" 已上传 " + e.bytesLoaded + " 字节，共 " + e.bytesTotal + " 字节。"+ " 当前进度: " + " " + proc + "%";
            if (e.bytesLoaded == e.bytesTotal) {
                CursorManager.removeBusyCursor();
            }
        }

        //上传图片到服务器
        private function proceedWithUpload():void {

            //进度监听
            file.addEventListener(ProgressEvent.PROGRESS, onProgress);
            var request:URLRequest = new URLRequest("/mogu/PluginIconUpload?pluginid="+plugin.id);
            request.method = URLRequestMethod.POST;

            request.contentType = "multipart/form-data";


            bar.visible = true;


            //设置鼠标忙状态
            try {
                file.upload(request, 'file', false);

            }
            catch (error:Error) {
                Alert.show("上传失败");
                bar.visible = false;
            }


        }

        //上传完成调用
        private function completeHandle(event:Event):void {
            byteArray = null;
            bar.visible = false;
            iconImage.source = null;
        }

        //上传完成调用
        private function completeHandle_image(event:Event):void {
            byteArray = null;
            bar.visible = false;
            appImage.source = null;
        }

        private function uploadImageResult(e:DataEvent):void {
            try {
                var result:Object = JParser.decode(e.data);
                if (result.success == true) {
                    Alert.show(result.message, "提示");
                    dispatchEvent(new PluginEvent());
                    file = new FileReference();
                    file.addEventListener(Event.SELECT, fileReferenceSelectHandler);
                    file.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadImageResult);


                }
            } catch (error:Error) {

                var i:Number = 1;
            }
            bar.visible = false;
            if (file_apk.data) {
                proceedWithUpload_apk();
            }
        }

        //载入本地图片
        private function fileReferenceCompleteHandler(e:Event):void {
            byteArray = file.data;
            loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loaderCompleteHandler);
            loader.loadBytes(byteArray);

        }

        //图片载入完成显示在预览框中
        private function loaderCompleteHandler(e:Event):void {
            var bitmap:Bitmap = Bitmap(loader.content);
            bitmapData = bitmap.bitmapData;
            iconImage.source = bitmap;
        }

        //载入本地图片
        private function fileReferenceCompleteHandler_image(e:Event):void {
            file_image.removeEventListener(Event.COMPLETE, fileReferenceCompleteHandler_image);
            byteArray = file_image.data;
            loader_image = new Loader();
            loader_image.contentLoaderInfo.addEventListener(Event.COMPLETE, loaderCompleteHandler_image);
            loader_image.loadBytes(byteArray);

        }

        //图片载入完成显示在预览框中
        private function loaderCompleteHandler_image(e:Event):void {
            var bitmap:Bitmap = Bitmap(loader_image.content);
            bitmapData = bitmap.bitmapData;
            appImage.source = bitmap;
//            loader_image.contentLoaderInfo.removeEventListener(Event.COMPLETE, loaderCompleteHandler_image);
            proceedWithUpload_image();


        }

        //选择文件动作监听
        private function fileReferenceSelectHandler(e:Event):void {
            file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
            file.load();
        }


        //选择文件动作监听
        private function fileReferenceSelectHandler_image(e:Event):void {
            file_image.removeEventListener(ProgressEvent.PROGRESS, onProgress);
            file_image.load();
        }


        private function uploadImageResult_image(e:DataEvent):void {
            try {
                var result:Object = JParser.decode(e.data);
                if (result.success == true) {
                    Alert.show(result.message, "提示");
                    appImage.source = null;

                    var img:Image = new Image();
                    img.source = result.result;
                    img.doubleClickEnabled = true;
                    img.addEventListener(MouseEvent.DOUBLE_CLICK, deleteImage);
                    imgGroup.addElement(img);

                    file_image = new FileReference();
                    file_image.addEventListener(Event.SELECT, fileReferenceSelectHandler_image);
                    file_image.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadImageResult_image);
                }
            } catch (error:Error) {

                var i:Number = 1;
            }
            bar.visible = false;
        }

        private var imgurl:String;

        private function deleteImage(event:MouseEvent):void {
            if (event.currentTarget is Image) {
//					Alert.show(event.currentTarget.source,"图片地址");
                imgurl = event.currentTarget.source;
                Alert.show("确认删除双击的图片?", "提示", Alert.YES | Alert.NO, null, deleteImg);
            }
        }

        //上传图片到服务器
        private function deleteImg(e:CloseEvent):void {
            if (e.detail == Alert.YES) {
                var data:Object = new Object();
                var r:Array = imgurl.split("/");
                data["imagekey"] = r[r.length - 1];
                data["pluginid"] = plugin.id;
                HttpServiceUtil.getCHTTPServiceAndResult("/mogu/DeleteAppImage", delImageResult, "POST").send(data);
            }
        }

        private function delImageResult(result:Object, e:ResultEvent):void {
            if (result.success) {
                for (var i:Number = 0; i < imgGroup.numElements; i++) {

                    var img:Image = imgGroup.getElementAt(i) as Image;
                    if (img.source == imgurl) {
                        imgGroup.removeElement(img);
                        dispatchEvent(new PluginEvent());
                        break;
                    }
                }
            }
        }

        //选择文件动作监听
        private function fileReferenceSelectHandler_apk(e:Event):void {
            apkImage.visible = true;
            file_apk.addEventListener(Event.COMPLETE,function(event:Event):void{
                tjButton.enabled = true;
                tjButton.setStyle("color",0xffffff);
                tjButton.label = "提交";
            });
            tjButton.enabled = false;
            tjButton.setStyle("color",0x000000);
            tjButton.label = "正在加载";
            file_apk.load();
        }

        private function uploadImageResult_apk(e:DataEvent):void {
            try {
                var result:Object = JParser.decode(e.data);
                if (result.success == true) {
                    Alert.show(result.message, "提示");
                    dispatchEvent(new PluginEvent());
                    file_apk = new FileReference();
                    file_apk.addEventListener(Event.SELECT, fileReferenceSelectHandler_apk);
                    file_apk.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadImageResult_apk);
                }
            } catch (error:Error) {

                var i:Number = 1;
            }
            bar.visible = false;
        }

        //上传图片到服务器
        private function proceedWithUpload_apk():void {

            //进度监听
            file_apk.addEventListener(ProgressEvent.PROGRESS, onProgress);
            var request:URLRequest = new URLRequest("/mogu/PluginApkUpload?pluginid="+plugin.id);
            request.method = URLRequestMethod.POST;
            request.contentType = "multipart/form-data";

            bar.visible = true;


            try {
                file_apk.upload(request, 'file', false);

            }
            catch (error:Error) {
                Alert.show("上传失败");
                bar.visible = false;
            }


        }

        //上传完成调用
        private function completeHandle_apk(event:Event):void {
            bar.visible = false;
            apkImage.source = null;
        }

        //载入本地图片
        private function fileReferenceCompleteHandler_apk(e:Event):void {
            apkImage.visible = true;

        }

        //选择上传的图片
        private function chooseApk():void {
//            file_apk.removeEventListener(Event.COMPLETE, completeHandle_apk);
//            file_apk.addEventListener(Event.COMPLETE, fileReferenceCompleteHandler_apk);
            var imageTypes:FileFilter = new FileFilter("File (*.apk)", "*.apk");
            var allTypes:Array = new Array(imageTypes);
            file_apk.browse(allTypes);
            //                file.browse();
        }

        //选择上传的图片
        private function chooseApkImage():void {
            if (!plugin.hasOwnProperty("id")) {
                Alert.show("请先保存应用信息，再上传应用的图片。")
                return;
            }
            file_image.removeEventListener(Event.COMPLETE, completeHandle_image);
            file_image.addEventListener(Event.COMPLETE, fileReferenceCompleteHandler_image);
            var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.png)", "*.jpg;*.jpeg;*.png");
            var allTypes:Array = new Array(imageTypes);
            file_image.browse(allTypes);
        }

        //上传图片到服务器
        private function proceedWithUpload_image():void {
            //进度监听
            file_image.addEventListener(ProgressEvent.PROGRESS, onProgress);
            var request:URLRequest = new URLRequest("/mogu/PluginImageUpload?pluginid="+plugin.id);
            request.method = URLRequestMethod.POST;
            request.contentType = "multipart/form-data";
            bar.visible = true;
            //设置鼠标忙状态
            try {
                file_image.upload(request, 'file', false);
            }
            catch (error:Error) {
                Alert.show("上传失败");
                bar.visible = false;
            }
        }
        ]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
        <s:RadioButtonGroup id="typeButtonGroup"></s:RadioButtonGroup>
	</fx:Declarations>
    <s:HGroup id="hGroup" width="100%" height="100%">

        <s:Form width="300" id="form" >
            <s:layout>
                <s:FormLayout gap="0"></s:FormLayout>
            </s:layout>

            <s:FormItem id="orgNameItem" label="应用名称:" textAlign="right">
                <s:TextInput id="appname"  width="200"  tabIndex="5" >
                </s:TextInput>
            </s:FormItem>
            <s:FormItem  label="应用类型:" textAlign="right">
                <s:layout>
                    <s:HorizontalLayout gap="10"></s:HorizontalLayout>
                </s:layout>
                <s:RadioButton value="0" group="{typeButtonGroup}" selected="true" label="单机"></s:RadioButton>
                <s:RadioButton value="1" group="{typeButtonGroup}" label="积分"></s:RadioButton>
                <s:RadioButton value="2" group="{typeButtonGroup}" label="多人"></s:RadioButton>
            </s:FormItem>
            <s:FormItem  label="应用介绍:" textAlign="right">
                <s:TextArea id="desc" width="200" height="100"></s:TextArea>
            </s:FormItem>
            <s:FormItem  label="应用分类:" textAlign="right">
                <s:DropDownList id="kinDownList" dataProvider="{ToolUtil.userkindlist}" labelField="name" selectedIndex="0" width="200"></s:DropDownList>
            </s:FormItem>
            <s:FormItem  label="应用图标:" textAlign="right">
                <s:layout>
                    <s:HorizontalLayout gap="10" verticalAlign="top"></s:HorizontalLayout>
                </s:layout>
                <s:Image id="iconImage" width="50" height="50"></s:Image>
                <s:Button label="选择图片" click="chooseImage()"></s:Button>
            </s:FormItem>

            <s:FormItem  label="apk:" textAlign="right">
                <s:layout>
                    <s:HorizontalLayout gap="10" verticalAlign="top"></s:HorizontalLayout>
                </s:layout>
                <s:Image id="apkImage" source="/static/image/apk.png" visible="false" width="50" height="50"></s:Image>
                <s:Button label="选择文件" click="chooseApk()"></s:Button>
            </s:FormItem>
            <s:FormItem>
                <s:layout>
                    <s:HorizontalLayout gap="10"/>
                </s:layout>
                <s:Button label="提交" id="tjButton" click="save()" chromeColor="red" color="#ffffff" height="25"  tabIndex="10">
                </s:Button>
                <s:Button label="放弃" click="closeWin()" chromeColor="#ffffff" color="#000000" height="25">
                </s:Button>

            </s:FormItem>
        </s:Form>
        <s:VGroup id="appImageGroup" width="450" height="100%" horizontalAlign="left" paddingTop="5">
           <s:Button label="选择应用图片" height="25" click="chooseApkImage()"/>
            <s:Image id="appImage" height="100"></s:Image>
            <s:Scroller width="440" height="370" >
                <s:VGroup id="imgGroup" toolTip="双击删除图片" >

                </s:VGroup>
            </s:Scroller>
        </s:VGroup>
    </s:HGroup>
    <uicontrol:CProgressBar id="bar" width="100%" height="100%" visible="false">
    </uicontrol:CProgressBar>
</window:EfficientTitleWindow>
