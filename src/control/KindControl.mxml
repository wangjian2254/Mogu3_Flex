<?xml version="1.0" encoding="utf-8"?>
<control:CBorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
                          xmlns:s="library://ns.adobe.com/flex/spark"
                          xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:control="control.*" width="700" height="700"
                          borderVisible="false" backgroundAlpha="0">
    <fx:Script>
		<![CDATA[
        import events.ChangeUserEvent;
        import events.CloseEvent;

        import httpcontrol.HttpServiceUtil;

        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.events.FlexEvent;
        import mx.events.ItemClickEvent;
        import mx.rpc.events.ResultEvent;

        import util.ToolUtil;

        [Bindable]
        private var btnlist:ArrayCollection = new ArrayCollection([
            {label: "新建分类", icon: addimg, mod: "add"},
            {label: "上移", icon: saveimg, mod: "up"},
            {label: "下移", icon: saveimg, mod: "down"}
        ]);

        override public function init(e:FlexEvent):void {

        }

        private var kind:Object = new Object();

        private function save():void {
            var obj:Object = new Object();
            if (kind.hasOwnProperty("id")) {
                obj['id'] = kind.id;
            }
            obj.name = nameInput.text;
            obj.type = typeDownList.selectedItem.id;

            HttpServiceUtil.getCHTTPServiceAndResult("/KindUpdate", function (result:Object, e:ResultEvent):void {
                ToolUtil.kindListRefresh();
                kind.id = result.result;
            }, "POST").send(obj);
        }

        private function del():void {
            var obj:Object = new Object();
            if (kind.hasOwnProperty("id")) {
                obj['id'] = kind.id;
            } else {
                Alert.show("请选择一个分类");
                return;
            }
            HttpServiceUtil.getCHTTPServiceAndResult("/KindDelete", function (result:Object, e:ResultEvent):void {
                ToolUtil.kindListRefresh();
                clearKind();
            }, "POST").send(obj);
        }

        private function kindDown():void {
            var obj:Object = new Object();
            if (kind.hasOwnProperty("id")) {
                obj['id'] = kind.id;
            } else {
                Alert.show("请选择一个分类");
                return;
            }
            obj['fx'] = "down";
            HttpServiceUtil.getCHTTPServiceAndResult("/KindMove", function (result:Object, e:ResultEvent):void {
                ToolUtil.kindListRefresh();
            }, "POST").send(obj);
        }

        private function kindUp():void {
            var obj:Object = new Object();
            if (kind.hasOwnProperty("id")) {
                obj['id'] = kind.id;
            } else {
                Alert.show("请选择一个分类");
                return;
            }
            obj['fx'] = "up";
            HttpServiceUtil.getCHTTPServiceAndResult("/KindMove", function (result:Object, e:ResultEvent):void {
                ToolUtil.kindListRefresh();
            }, "POST").send(obj);
        }

        private function clearKind():void {
            kind = new Object();
            nameInput.text = "";
            kindGrid.selectedIndex = -1;
        }

        private function selectKind():void {
            if (kindGrid.selectedIndex >= 0) {
                kind = kindGrid.selectedItem;
                nameInput.text = kind.name;
                for each(var item:Object in ToolUtil.kindTypeList) {
                    if (item.id == kind.type) {
                        typeDownList.selectedItem = item;
                    }
                }
            }
        }

        private function btnHandler(e:ItemClickEvent):void {
            switch (e.item.mod) {
                case "add":
                    clearKind();
                    break;
                case "up":
                    kindUp();
                    break;
                case "down":
                    kindDown();
                    break;
            }
        }

        override public function changeCurrentUser(e:ChangeUserEvent):void {
        }

        override public function closeContainer(e:CloseEvent):void {
            dispatchEvent(e);
        }


        // 重新进入时执行
        override public function reloadParamData(e:FlexEvent):void {
            if (param) {
                if (param.hasOwnProperty("messageType")) {

                }

            }
            super.reloadParamData(e);
        }


        private function managerLabel(item:Object, column:GridColumn):String {
            for each(var person:Object in ToolUtil.memberList) {
                if (person.id == item.manager) {
                    return person.name;
                }

            }
            return "";
        }

        private function fatherProjectLabel(item:Object, column:GridColumn):String {
            for each(var person:Object in ToolUtil.allProjectList) {
                if (person.id == item.fproject) {
                    return person.name;
                }

            }
            return "";
        }


        private function statusLabel(item:Object, column:GridColumn):String {
            for each(var person:Object in ToolUtil.kindTypeList) {
                if (person.id == item.type) {
                    return person.label;
                }

            }
            return "";
        }
        ]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<control:layout>
		<s:VerticalLayout gap="0" >
			
		</s:VerticalLayout>
	</control:layout>

        <s:VGroup  width="100%" height="100%">
            <s:BorderContainer width="100%" height="45" borderVisible="false" backgroundImage="{CBorderContainer.toolbgimg}">
                <s:layout>
                    <s:HorizontalLayout verticalAlign="middle" paddingLeft="20"></s:HorizontalLayout>
                </s:layout>
                <mx:ButtonBar id="showModel" itemClick="btnHandler(event)" dataProvider="{btnlist}" height="30" chromeColor="#faf0cc"   labelField="label" />
            </s:BorderContainer>
            <s:HGroup width="100%" height="100%">
                <s:DataGrid  id="kindGrid" dataProvider="{ToolUtil.allkindlist}" width="250" height="100%" selectionChange="selectKind()">
                    <s:columns>
                        <s:ArrayList>
                            <s:GridColumn dataField="name" headerText="名称" dataTipField="desc"  minWidth="100" sortable="false"></s:GridColumn>
                            <s:GridColumn dataField="type" headerText="类型" labelFunction="statusLabel" minWidth="60"  sortable="false"></s:GridColumn>
                            <s:GridColumn dataField="index" headerText="排序"  minWidth="60"  sortable="false"></s:GridColumn>
                        </s:ArrayList>
                    </s:columns>
                </s:DataGrid>
                <s:VGroup width="100%" height="100%">
                    <s:Form>
                        <s:FormItem label="名称">
                            <s:TextInput width="200" id="nameInput"></s:TextInput>
                        </s:FormItem>
                        <s:FormItem label="类型">
                            <s:DropDownList id="typeDownList" labelField="label" dataProvider="{ToolUtil.kindTypeList}" selectedIndex="0"></s:DropDownList>
                        </s:FormItem>
                        <mx:ControlBar horizontalGap="10">
                            <s:Button chromeColor="red" color="#ffffff" label="保存" height="25" click="save()"></s:Button>
                            <s:Button  label="删除" height="25" click="del()"></s:Button>
                            <s:Button  label="上移" height="25"  click="kindUp()"></s:Button>
                            <s:Button  label="下移" height="25" click="kindDown()"></s:Button>
                        </mx:ControlBar>
                    </s:Form>
                </s:VGroup>
            </s:HGroup>

        </s:VGroup>

</control:CBorderContainer>
